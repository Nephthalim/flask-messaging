{"version":3,"sources":["components/LoginForm/LoginForm.module.css","components/SideBar/Conversation.js","components/SideBar/SideBar.js","components/Message/Message.js","components/Chat/ChatRoom.js","pages/undraw_Online_chat_re_c4lx.svg","pages/Chat.js","components/RegisterForm/RegisterForm.js","pages/Register.js","components/LoginForm/image.svg","components/LoginForm/LoginForm.js","components/Nav/Nav.js","pages/Login.js","App.js","index.js","components/RegisterForm/RegisterForm.module.css","components/Nav/Nav.module.css"],"names":["module","exports","Conversation","conversation","setChosen","active","className","onClick","id","username","toUpperCase","Contacts","setContact","chatId","isAuthenticated","setAuthentication","useState","chosen","conversations","setConversations","searchRes","setSearchRes","match","useRouteMatch","history","useHistory","token","localStorage","getItem","searchInputRef","useRef","useEffect","fetch","method","headers","mode","then","res","status","json","toaster","error","push","data","catch","console","log","current","value","type","placeholder","ref","onChange","autoComplete","length","map","to","url","body","JSON","stringify","path","removeItem","Message","props","my_message","name","message","time_sent","ChatRoom","socket","setChatId","contact","useParams","textInputRef","messages","setMessages","user","setUser","on","err","connect","emit","conversation_id","msg","sender","onSubmit","e","preventDefault","enteredTextInput","Chat","io","extraHeaders","undefined","exact","src","texting_image","RegisterForm","addUser","usernameInputRef","passwordInputRef","registerUser","entered","toString","classes","container","column","description","login","Register","access_token","setItem","LoginForm","loginUser","errorMessage","setErrorMessage","hero","buttons","href","btn","style","textDecoration","color","image","alt","Nav","navbar","logo","Login","success","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","App","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33d15f91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"LoginForm_navbar__2paba\",\"container\":\"LoginForm_container__3llB1\",\"logo\":\"LoginForm_logo__3oRc2\",\"hero\":\"LoginForm_hero__1Osgo\",\"buttons\":\"LoginForm_buttons__KRW16\",\"btn\":\"LoginForm_btn__MfdxB\",\"description\":\"LoginForm_description__192Vg\"};","import React from 'react'\n\nconst Conversation = ({ conversation, setChosen, active }) => {\n    return (\n        <div className={active ? 'row clicked' : 'row'} onClick={() => setChosen(conversation.id)}>\n            <div className=\"initials\">\n                <p>{conversation.username[0].toUpperCase()}</p>\n            </div>\n            <div className=\"column\">\n                <h1>{conversation.username.toUpperCase()}</h1>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Conversation\n","import React, { useEffect, useRef } from 'react'\n\nimport { useState } from 'react'\nimport { useHistory, Link, useRouteMatch } from 'react-router-dom'\nimport { toaster } from '../../App';\nimport Conversation from './Conversation'\nimport './SideBar.css';\nimport { BiLogOut } from \"react-icons/bi\";\n\nconst Contacts = ({ setContact, chatId, isAuthenticated, setAuthentication }) => {\n    const [chosen, setChosen] = useState();\n    const [conversations, setConversations] = useState([]);\n    const [searchRes, setSearchRes] = useState([]);\n\n    // const url = \"http://nephthalims-chat.herokuapp.com\"\n    // const url = \"http://127.0.0.1:5000\"\n    const match = useRouteMatch();\n    const history = useHistory();\n    const token = localStorage.getItem('x-token')\n    const searchInputRef = useRef();\n\n    const getConversations = () => {\n        fetch(\n            \"/dashboard/conversations\",\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'x-token': token\n                },\n                mode: 'cors'\n            }\n\n        ).then((res) => {\n            if (res.status === 201 || res.status === 200) return res.json();\n            else if (res.status === 409) {\n                setSearchRes([]);\n                toaster.error(\"Conversation already exists\");\n\n            }\n            else history.push('/')\n        }).then((data) => {\n            setConversations(data.conversations)\n\n        }).catch((error) => {\n            console.log(error)\n            setAuthentication(false);\n        })\n    }\n\n    const getContacts = () => {\n        fetch(\n            \"/dashboard/search?query=\" + searchInputRef.current.value,\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'x-token': token\n                },\n                mode: 'cors'\n            }\n\n        ).then((res) => {\n            if (res.status === 201 || res.status === 200) return res.json();\n            else if (res.status === 409) {\n                setSearchRes([]);\n                toaster.error(\"Conversation already exists\");\n            }\n        }).then((data) => {\n            setSearchRes(data.conversations)\n        }).catch((error) => {\n            console.log(error);\n            setAuthentication(false);\n        })\n    }\n\n    const addContact = (id) => {\n        setSearchRes([]);\n        searchInputRef.current.value = \"\";\n        fetch(\n            \"/dashboard/conversations\",\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'x-token': token\n                },\n                body: JSON.stringify({ 'recipient': id }),\n                mode: 'cors'\n            }\n\n        ).then((res) => {\n            if (res.status === 201 || res.status === 200) return res.json();\n            else if (res.status === 409) {\n                toaster.error(\"Conversation already exists\");\n                setChosen(chosen.id)\n                throw (\"Conversation exists\");\n            }\n            else history.push('/')\n        }).then((data) => {\n            setConversations(conversations => [...conversations, data.conversation]);\n            setChosen(data.conversation.id)\n            history.push(`${match.path}/${data.conversation.id}`);\n        }).catch((error) => {\n            console.log(error);\n            setAuthentication(false);\n        })\n    }\n\n    const logout = () => {\n        setAuthentication(false);\n\n        fetch(\n            \"/auth/logout\",\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'x-token': token\n                },\n                mode: 'cors'\n            }\n        ).then((res) => {\n            if (res.status === 200) return res.json();\n        }).then((data) => {\n            localStorage.removeItem('x-token');\n            history.push('/');\n        }).catch((error) => {\n            console.log(error)\n            history.push('/');\n\n        })\n    }\n    useEffect(() => {\n        getConversations()\n        setChosen(chatId)\n        searchInputRef.current.value = \"\";\n    }, [chatId, isAuthenticated])\n\n\n    return (\n        <section className=\"contact_list\">\n            <div className=\"name\">\n                <h1>Contacts</h1>\n            </div>\n            <input className=\"search\" id=\"search\" type=\"text\" placeholder=\"Search\" ref={searchInputRef} onChange={() => getContacts()} autoComplete=\"off\" />\n            <br />\n            <div className=\"list\">\n                {\n                    searchRes.length === 0 ?\n                        conversations.map((conversation) => {\n                            return <Link to={`${match.url}/${conversation.id}`} className=\"link\" key={conversation.id} onClick={() => setContact(conversation.username[0])}>\n                                <Conversation\n                                    key={conversation.id}\n                                    conversation={conversation}\n                                    setChosen={setChosen}\n                                    active={conversation.id == chosen}\n                                />\n                            </Link>\n                        }\n                        ) :\n                        searchRes.map((res) => {\n                            return <div onClick={() => addContact(res.id)} key={res.id}>\n                                <Conversation\n                                    conversation={res}\n                                    setChosen={setChosen}\n                                    active={false}\n                                />\n                            </div>\n                        })\n\n                }\n            </div>\n            <div className=\"logout\" onClick={logout} >\n                <BiLogOut />\n            </div>\n        </section >\n    )\n}\n\nexport default Contacts\n","import React from 'react'\nimport './Message.css'\n\n\nconst Message = (props) => {\n    return (\n        <li className={props.my_message ? 'my_message message' : 'their_message message'}>\n            <div className='card'>\n                <div className='content'>\n                    {!props.my_message ?\n                        (<div className=\"initials\">\n                            <p>\n                                {props.name.toUpperCase()}\n                            </p>\n                        </div>)\n                        : null\n                    }\n                    <div className='text_message'>\n                        {props.message}\n                    </div>\n                </div>\n                <div className='time_sent'>{props.time_sent}</div>\n            </div>\n\n        </li>\n\n\n    )\n}\n\nexport default Message\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport './ChatRoom.css'\nimport Message from '../Message/Message';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nconst ChatRoom = ({ socket, setChatId, contact }) => {\n    const token = localStorage.getItem(\"x-token\");\n    const { chatId } = useParams();\n    const textInputRef = useRef();\n    const url = \"http://nephthalims-chat.herokuapp.com\"\n    // const url = \"http://127.0.0.1:5000\"\n    const [messages, setMessages] = useState([]);\n    const [user, setUser] = useState([]);\n\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        const enteredTextInput = textInputRef.current.value;\n        console.log(enteredTextInput)\n        socket.emit('message', { msg: enteredTextInput, conversation_id: chatId });\n        textInputRef.current.value = \"\";\n    }\n\n\n    socket.on('message', data => {\n        setMessages(messages => [...messages, data])\n\n    });\n\n    const getMessages = () => {\n        fetch(\n            '/chat/messages/' + chatId,\n            {\n                method: \"GET\",\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    \"x-token\": token\n                }\n            }).then((res) => {\n                return res.json()\n            }).then((data) => {\n                setMessages(data.messages)\n                setUser(data.user)\n            }).catch((err) => {\n                localStorage.removeItem('x-token')\n            })\n    }\n\n    useEffect(() => {\n        getMessages();\n        socket.connect();\n        socket.emit('join', { conversation_id: chatId })\n        setChatId(chatId)\n\n    }, [chatId])\n\n    return (\n        <div className='hero'>\n            <ScrollToBottom className=\"messages\">\n                {messages.map((message) => {\n                    return <Message\n                        key={message.id}\n                        name={contact}\n                        message={message.msg}\n                        time_sent={message.time_sent}\n                        my_message={message.sender === user}\n                    />\n                }\n                )}\n            </ScrollToBottom>\n            <form onSubmit={sendMessage}>\n                <input className=\"msg_input\" id=\"msg\" type=\"text\" ref={textInputRef} placeholder=\"Text message\" autoComplete=\"off\" />\n            </form>\n        </div>\n    )\n\n}\n\nexport default ChatRoom\n","export default __webpack_public_path__ + \"static/media/undraw_Online_chat_re_c4lx.43211c95.svg\";","import React, { useEffect, useState } from 'react'\nimport SideBar from '../components/SideBar/SideBar'\nimport {\n    Switch,\n    Route,\n    useRouteMatch\n} from 'react-router-dom'\nimport ChatRoom from '../components/Chat/ChatRoom';\nimport texting_image from './undraw_Online_chat_re_c4lx.svg'\nimport './Chat.css'\nimport { io } from \"socket.io-client\";\nconst Chat = ({ isAuthenticated, setAuthentication }) => {\n    const token = localStorage.getItem('x-token')\n    const url = \"http://nephthalims-chat.herokuapp.com\"\n    // const url = \"http://127.0.0.1:5000\"\n    const socket = io( { path: '/socket.io/', extraHeaders: { 'x-token': token, 'Content-Type': 'application/json' } });\n    const [chatId, setChatId] = useState();\n    const [contact, setContact] = useState();\n    const match = useRouteMatch();\n\n\n    useEffect(() => {\n        if (token && token !== \"\" && token !== undefined) {\n            setAuthentication(true);\n        }\n\n    }, [])\n    return (\n        <div className='chat'>\n            <SideBar setContact={setContact} chatId={chatId} isAuthenticated={isAuthenticated} setAuthentication={setAuthentication}/>\n            <Switch>\n                <Route exact path={match.path}>\n                    <div className='image'>\n                        <img src={texting_image} />\n                    </div>\n                </Route>\n                <Route exact path={`${match.path}/:chatId`}>\n                    <ChatRoom socket={socket} setChatId={setChatId} contact={contact}/>\n                </Route>\n            </Switch>\n\n        </div>\n    )\n}\n\nexport default Chat\n","import React from 'react'\nimport { useRef } from 'react'\n\n\nimport classes from './RegisterForm.module.css';\n\nconst RegisterForm = ({ addUser }) => {\n    const usernameInputRef = useRef();\n    const passwordInputRef = useRef();\n    const registerUser = (e) => {\n        console.log(\"Pressed\")\n        e.preventDefault();\n        const enteredUsername = usernameInputRef.current.value.toString()\n        const enteredPassword = passwordInputRef.current.value.toString()\n        const entered = {\n            'username': enteredUsername,\n            'password': enteredPassword\n        }\n        const user = JSON.stringify(entered)\n        addUser(user);\n\n    }\n    return (\n        <div className={classes.body}>\n            <div className={classes.container}>\n                <div className={classes.column}>\n                    <h1>Nephthalim's</h1>\n                    <h2>Chat</h2>\n                    <p className={classes.description}>This is a messaging application built\n                        with Flask</p>\n                    <div className={classes.login}>\n                        <form onSubmit={registerUser}>\n                            <input ref={usernameInputRef} type=\"username\" id=\"username\" name=\"username\" placeholder=\"Username\" />\n                            <input ref={passwordInputRef} type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" />\n                            <input onClick={registerUser} type=\"submit\" id=\"register-btn\" name=\"register\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RegisterForm\n","import React from 'react'\nimport RegisterForm from '../components/RegisterForm/RegisterForm'\nimport { toaster } from '../App.js'\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Register = ({ setAuthentication }) => {\n    \n    const url = \"https://nephthalims-chat.herokuapp.com\"\n    // const url = \"http://127.0.0.1:5000\"\n\n    const addUser = (user) => {\n        fetch(\n            url + \"/auth/register\", {\n                method: 'POST',\n                body: user,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Allow-Type': 'application/json',\n                },\n                mode: 'no-cors',\n\n            }\n\n        ).then((res) => {\n            switch (res.status) {\n                case 201:\n                    return res.json();\n                case 422:\n                    toaster.error(\"Missing data\");\n                    break; //flash missing data;\n                case 401:\n                    toaster.error(\"User already exists\")\n                    break; //flash wrong credentials;\n                default:\n                    toaster.error(\"There seems to be an internal error 😬 It's not me, I promise. Please try again some other time! \") //flash error\n                    break;\n            }\n        }).then((data) => {\n            if (data.access_token) {\n                localStorage.setItem(\"x-token\", data.access_token)\n\n                //Must implement this useState in the parent component\n                setAuthentication(true);\n            }\n        }).catch((err) => {\n            console.log(err)\n        })\n\n    }\n    return <RegisterForm addUser = { addUser }\n    />\n\n\n}\n\nexport default Register","export default __webpack_public_path__ + \"static/media/image.1df5cf55.svg\";","import React from 'react'\nimport image from './image.svg'\nimport { Link } from 'react-router-dom';\nimport classes from './LoginForm.module.css';\nimport { useRef } from 'react';\nimport { useState } from 'react'\n\nconst LoginForm = ({ loginUser }) => {\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    const usernameInputRef = useRef();\n    const passwordInputRef = useRef();\n    const loginUserHandler = (e) => {\n        e.preventDefault();\n        const enteredUsername = usernameInputRef.current.value\n        const enteredPassword = passwordInputRef.current.value\n\n        const entered = {\n            \"username\": enteredUsername,\n            \"password\": enteredPassword\n        }\n        const user = JSON.stringify(entered)\n        loginUser(user, setErrorMessage);\n\n    }\n\n    return (\n\n        <section className={classes.hero}>\n            <div className={classes.container}>\n                <h1>Nephthalim's</h1>\n                <h2>Chat</h2>\n                <form className={classes.login} id=\"login\">\n                    <input ref={usernameInputRef} type=\"username\" id=\"username\" name=\"username\"\n                        placeholder=\"Username\" />\n                    <input ref={passwordInputRef} type=\"password\" id=\"password\" name=\"password\"\n                        placeholder=\"Password\" />\n                    <div className={classes.buttons}>\n                        <a href=\"#\" className={classes.btn} onClick={loginUserHandler}>Login</a>\n                        <a href=\"#\" className={classes.btn}><Link to='/register' style={{ textDecoration: \"none\", color: \"#ffff\" }}>Register</Link></a>\n                    </div>\n                    <div>{errorMessage}</div>\n\n                </form>\n                <p className={classes.description}>This is a messaging application built\n                    with Flask</p>\n            </div>\n            <div className={classes.image}>\n                <img alt =\"\" src={image} />\n            </div>\n        </section>\n    )\n}\n\nexport default LoginForm\n","import React from 'react'\n\nimport classes from './Nav.module.css';\nconst Nav = () => {\n    return (\n        <div className={classes.navbar}>\n            <div className={classes.container}>\n                <a className={classes.logo} href=\"#\">Nephthalim's<span>Chat</span></a>\n                <nav>\n                    <ul>\n                        <li><a\n                                href=\"https://www.linkedin.com/in/nephthalimabebe\">Contact</a></li>\n                    </ul>\n                </nav>\n            </div> \n        </div>\n    );\n}\n\nexport default Nav\n","import React from 'react'\nimport LoginForm from '../components/LoginForm/LoginForm';\nimport Nav from '../components/Nav/Nav';\nimport { toaster } from '../App.js'\n\nconst Login = ({ setAuthentication }) => {\n    const url = \"https://nephthalims-chat.herokuapp.com\"\n    // const url = \"http://localhost:5000\"\n\n    const loginUser = (user, setErrorMessage) => {\n        fetch(\n            \"/auth/login\",\n            {\n                method: 'POST',\n                body: user,\n                headers: {\n                    'Access-Control-Allow-Headers': '*',\n                    'Content-Type': 'application/json',\n                },\n                mode: 'cors'\n            }\n\n        ).then((res) => {\n            switch (res.status) {\n                case 201: return res.json();\n                case 422:\n                    toaster.error(\"Missing data\")\n                    break;//flash missing data;\n                case 401:\n                    toaster.error(\"Please check if you are using the right username or password\")\n                    break; //flash wrong credentials;\n                default:\n                    toaster.error(\"There seems to be an internal error 😬 It's not me, I promise. Please try again some other time! \") //flash error\n                    break;\n\n            }\n        }).then((data) => {\n            if (data.access_token) {\n                console.log(\"Logged in\")\n                localStorage.setItem(\"x-token\", data.access_token)\n                toaster.success()\n                //Must implement this useState in the parent component\n                setAuthentication(true);\n            } else {\n                setErrorMessage(data.msg)\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    return (\n        // <div>\n        <div>\n            <Nav />\n            <LoginForm loginUser={loginUser} />\n        </div>\n\n    )\n}\n\nexport default Login\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { useState, useEffect } from 'react'\nimport Chat from './pages/Chat';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport const toaster = {\n  success: () => toast.success('🎉 You have successfuly logged in.', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n  }),\n  error: (msg) => toast.error(msg, {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n  }),\n}\nfunction App() {\n\n  const [isAuthenticated, setAuthentication] = useState(false);\n\n  const token = localStorage.getItem(\"token\")\n  \n  useEffect(() => {\n    console.log(\"Hello\")\n    if (token && token !== \"\" && token !== undefined) {\n      setAuthentication(true);\n    } else {\n      setAuthentication(false);\n    }\n  }, [])\n  return (\n    <div>\n      <Switch>\n\n        <Route path='/' exact>\n          {!isAuthenticated ?\n            <Login setAuthentication={setAuthentication} />\n            :\n            <Redirect to='/chat' />\n          }\n        </Route>\n        <Route path='/register' exact>\n          {!isAuthenticated ?\n            <Register setAuthentication={setAuthentication} />\n            :\n            <Redirect to='/chat' />\n          }\n        </Route>\n\n        <Route path='/chat'>\n          \n            <Chat isAuthenticated={isAuthenticated} setAuthentication={setAuthentication} />\n\n          \n        </Route>\n\n        <Route path='*'>\n          <Redirect to='/' />\n        </Route>\n      </Switch>\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n\nexport default App ;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"RegisterForm_body__2GQi8\",\"container\":\"RegisterForm_container__2EwMS\",\"column\":\"RegisterForm_column__3EEtd\",\"login\":\"RegisterForm_login__pg8eo\",\"register-btn\":\"RegisterForm_register-btn__1g8y7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Nav_navbar__1aE1E\",\"container\":\"Nav_container__3O35C\",\"logo\":\"Nav_logo__348g8\"};"],"sourceRoot":""}